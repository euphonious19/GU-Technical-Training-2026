class Solution {
    public int[][] matrixBlockSum(int[][] mat, int k) {
        int m= mat.length;
        int n= mat[0].length;
        int[][] prefixsum= new int[m+1][n+1];
        int[][] result= new int[m][n];

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                prefixsum[i][j] = mat[i - 1][j - 1] 
                                + prefixsum[i - 1][j] 
                                + prefixsum[i][j - 1] 
                                - prefixsum[i - 1][j - 1];
            }
        }

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {

                int x1 = Math.max(i - k, 0);
                int y1 = Math.max(j - k, 0);
                int x2 = Math.min(i + k, m - 1);
                int y2 = Math.min(j + k, n - 1);

                result[i][j] = prefixsum[x2 + 1][y2 + 1]
                              - prefixsum[x1][y2 + 1]
                              - prefixsum[x2 + 1][y1]
                              + prefixsum[x1][y1];
            }
        }
        
        return result;
    }
}
