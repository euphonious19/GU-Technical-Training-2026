class Solution {
    bool convertTrueFalse(vector<int>& nums, int threshold, int result){
        int sum = 0;
        for(int i = 0; i < nums.size(); i++){
            sum += (nums[i] % result) == 0 ? (nums[i] / result) : (nums[i] / result) + 1;
        }
        return sum <= threshold ? true : false;
    }

public:
    int smallestDivisor(vector<int>& nums, int threshold) {
        int start = 1, end = INT_MIN, mid = 0;

        for(int i = 0; i < nums.size(); i++){
            end = max(end, nums[i]);
        }

        while(start <= end){
            mid = start + (end - start) / 2;
            if(convertTrueFalse(nums, threshold, mid)){
                end = mid - 1;
            }
            else{
                start = mid + 1;
            }
        }

        return start;
    }
};
